{"version":3,"sources":["actions/types.js","actions/logActions.js","components/layout/SearchBar.js","components/layout/AddBtn.js","components/logs/LogItem.js","components/layout/Preloader.js","components/logs/Logs.js","actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","reducers/logreducer.js","reducers/techreducer.js","reducers/index.js","store.js","App.js","index.js"],"names":["GET_LOGS","ADD_LOG","DELETE_LOG","SET_CURRENT","CLEAR_CURRENT","UPDATE_LOG","SET_LOADING","LOGS_ERROR","SEARCH_LOGS","GET_TECHS","ADD_TECH","DELETE_TECH","TECHS_ERROR","setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","class","id","placeholder","ref","onChange","e","current","value","htmlFor","AddBtn","href","deleteLog","method","setCurrent","log","attention","onClick","message","tech","format","date","M","toast","html","Preloader","state","getLogs","logs","loading","useEffect","length","map","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","target","htmlfor","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","console","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd7c557.chunk.js","sourcesContent":["export const GET_LOGS = \"GET_LOGS\";\nexport const ADD_LOG = \"ADD_LOG\";\nexport const DELETE_LOG = \"DELETE_LOG\";\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const UPDATE_LOG = \"UPDATE_LOG\";\nexport const CLEAR_LOGS = \"CLEAR_LOGS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const LOGS_ERROR = \"LOGS_ERROR\";\nexport const SEARCH_LOGS = \"SEARCH_LOGS\";\nexport const GET_TECHS = \"GET_TECHS\";\nexport const ADD_TECH = \"ADD_TECH\";\nexport const DELETE_TECH = \"DELETE_TECH\";\nexport const TECHS_ERROR = \"TECHS_ERROR\";\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n  SEARCH_LOGS\n} from \"./types\";\n\n// Get Logs from DB.\nexport const getLogs = () => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(\"/logs\");\n            const data = await res.json();\n\n            dispatch({\n              type: GET_LOGS,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n              type: LOGS_ERROR,\n              payload: error.response.statusText,\n            });\n        }    \n    }\n}\n\n// Delete Logs from DB.\nexport const deleteLog = (id) => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            await fetch(`/logs/${id}`, {\n                method: \"DELETE\"\n            });\n\n            dispatch({\n              type: DELETE_LOG,\n              payload: id,\n            });\n        } catch (error) {\n            dispatch({\n              type: LOGS_ERROR,\n              payload: error.response.statusText,\n            });\n        }    \n    }\n}\n\n// Upadte Logs from DB.\nexport const updateLog = log => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(`/logs/${log.id}`, {\n              method: \"PUT\",\n              body: JSON.stringify(log),\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            });\n\n            const data = await res.json();\n            \n            dispatch({\n              type: UPDATE_LOG,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n              type: LOGS_ERROR,\n              payload: error.response.statusText,\n            });\n        }    \n    }\n}\n\n// Search Logs from DB.\nexport const searchLogs = (text) => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(`/logs?q=${text}`);\n            const data = await res.json();\n\n            dispatch({\n              type: SEARCH_LOGS,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n              type: LOGS_ERROR,\n              payload: error.response.statusText,\n            });\n        }    \n    }\n}\n\n// SetCurrent Log\nexport const setCurrent = log => {\n    return {\n        type: SET_CURRENT,\n        payload: log\n    }\n}\n\n// Clear Current Log\nexport const clearCurrent = () => {\n    return {\n        type: CLEAR_CURRENT\n    }\n}\n\n\n// Add Logs to DB.\nexport const addLog = (log) => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(\"/logs\", {\n                method: \"POST\",\n                body: JSON.stringify(log),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const data = await res.json();\n\n            dispatch({\n              type: ADD_LOG,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n              type: LOGS_ERROR,\n              payload: error.response.statusText,\n            });\n        }    \n    }\n}\n\n// SET LOADING TO TRUE\nexport const setLoading = () => {\n    return { type: SET_LOADING}\n}","import React, {useRef} from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { searchLogs } from \"../../actions/logActions\";\n\nconst SearchBar = ({ searchLogs }) => {\n  const text = useRef(\"\")\n  const onChange = e => {\n    searchLogs(text.current.value)\n  }\n\n  return (\n    <nav style={{ marginBottom: \"30px\" }} className=\"blue\">\n      <div className=\"nav-wrapper\">\n        <form>\n          <div class=\"input-field\">\n            <input id=\"search\" type=\"search\" placeholder=\"Search Logs...\" ref={text} onChange={onChange}/>\n            <label className=\"label-icon\" htmlFor=\"search\">\n              <i className=\"material-icons\">search</i>\n            </label>\n            <i className=\"material-icons\">close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\n\nSearchBar.propTypes = {\n  searchLogs : PropTypes.func.isRequired,\n}\n\nexport default connect(null, {searchLogs})(SearchBar);\n","import React from \"react\";\n\nconst AddBtn = () => {\n  return (\n    <div className=\"fixed-action-btn\">\n      <a\n        href=\"#add-log-modal\"\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\n      >\n        <i class=\"large material-icons\">add</i>\n      </a>\n      <ul>\n        <li>\n          <a href=\"#tech-list-modal\" class=\"btn-floating green modal-trigger\">\n            <i class=\"material-icons\">person</i>\n          </a>\n        </li>\n        <li>\n          <a href=\"#add-tech-modal\" class=\"btn-floating red modal-trigger\">\n            <i class=\"material-icons\">person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import React from \"react\";\nimport Moment from \"react-moment\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport M from \"materialize-css/dist/js/materialize.min.js\"\n\nimport {deleteLog, setCurrent} from \"../../actions/logActions\"\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: \"Log Deleted\" });\n  };\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        <a\n          href=\"#edit-log-modal\"\n          className={`modal-trigger ${\n            log.attention ? \"red-text\" : \"blue-text\"\n            }`}\n          onClick={()=> setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span class=\"grey-text\">\n          <span class=\"black-text\">Id #{log.id}</span> Last Updated By:{\" \"}\n          <span class=\"black-text\">{log.tech}</span> on{\" \"}\n          <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n        </span>\n        <a href=\"#!\" onClick={onDelete} class=\"secondary-content\">\n          <i class=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n","import React from 'react'\n\nconst Preloader = () => {\n    return (\n        <div className=\"progress blue lighten-4\">\n            <div class=\"indeterminate blue\" />\n        </div>\n    )\n}\n\nexport default Preloader\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\"\nimport PropTypes from 'prop-types'\n\nimport LogItem from \"./LogItem\"\nimport {getLogs} from \"../../actions/logActions\"\nimport Preloader from \"../layout/Preloader\"\n\nconst Logs = ({log:{logs, loading}, getLogs}) => {\n\n  useEffect(() => {\n    getLogs();\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs===null) {\n    return <Preloader/>;\n  }\n\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center\">System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No Logs to Show...</p>\n      ) : (\n        logs.map((log) => <LogItem log={log} key={log.id}/>)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n}\n\nconst mapStateToProps = state => ({\n  log: state.log\n})\n\nexport default connect(mapStateToProps,{getLogs})(Logs);\n","import {\n    GET_TECHS,\n    ADD_TECH,\n    DELETE_TECH,\n    TECHS_ERROR,\n    SET_LOADING\n} from \"./types\"\n\n// Get Techs from DB.\nexport const getTechs = () => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(\"/techs\");\n            const data = await res.json();\n\n            dispatch({\n              type: GET_TECHS,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: TECHS_ERROR,\n                payload: error.response.statusText\n            })\n        }    \n    }\n}\n\n// Add Techs from DB.\nexport const addTech = (tech) => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            const res = await fetch(\"/techs\", {\n                method: \"POST\",\n                body: JSON.stringify(tech),\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                }\n            });\n            const data = await res.json();\n\n            dispatch({\n              type: ADD_TECH,\n              payload: data,\n            });\n        } catch (error) {\n            dispatch({\n                type: TECHS_ERROR,\n                payload: error.response.statusText\n            })\n        }    \n    }\n}\n\n// Delete Techs from DB.\nexport const deleteTech = (id) => {\n    return async (dispatch) => {\n        try {\n            setLoading();\n            await fetch(`/techs/${id}`, {\n                method: \"DELETE\"\n            });\n\n            dispatch({\n              type: DELETE_TECH,\n              payload: id,\n            });\n        } catch (error) {\n            dispatch({\n                type: TECHS_ERROR,\n                payload: error.response.statusText\n            })\n        }    \n    }\n}\n\n\n// SET LOADING TO TRUE\nexport const setLoading = () => {\n    return { type: SET_LOADING}\n}","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport { getTechs } from \"../../actions/techActions\";\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((t) => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {addLog} from \"../../actions/logActions\"\nimport M from \"materialize-css/dist/js/materialize.min.js\"\nimport TechSelectOptions from \"../techs/TechSelectOptions\"\n\nconst AddLogModal = ({addLog}) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  const onSubmit = () => {\n    if(message === \"\" || tech === \"\"){\n        M.toast({html: \"Please enter a message and a tech\"})\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date()\n      }\n\n      addLog(newLog)\n      M.toast({html:`Log added by ${tech}`})\n\n      // Clear fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  }\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div class=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"Message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <label htmlfor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <select\n              name=\"Tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-green btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired\n}\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nexport default connect(null, {addLog})(AddLogModal);\n","import React, { useState, useEffect } from \"react\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nimport {updateLog} from \"../../actions/logActions\"\nimport TechSelectOptions from \"../techs/TechSelectOptions\";\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState(\"\");\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState(\"\");\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message)\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current])\n\n  const onSubmit = () => {\n    if (message === \"\" || tech === \"\") {\n      M.toast({ html: \"Please enter a message and a tech\" });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date()\n      }\n\n      updateLog(updLog)\n      M.toast({html: `Log Updated by ${tech}`})\n\n      // Clear fields\n      setMessage(\"\");\n      setTech(\"\");\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div class=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"Message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <select\n              name=\"Tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"filled-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={(e) => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-green btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: \"75%\",\n  height: \"75%\",\n};\n\nEditLogModal.propTypes = {\n  current: PropTypes.object,\n  updatelog : PropTypes.func.isRequired\n}\n\nconst mapStateToProps = (state) => ({\n  current: state.log.current\n})\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\"\nimport PropTypes from 'prop-types'\n\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport {addTech} from \"../../actions/techActions\"\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n\n  const onSubmit = () => {\n    if (firstName === \"\" || lastName === \"\") {\n      M.toast({ html: \"Please enter the first and the last name\" });\n    } else {\n      addTech({\n        firstName,\n        lastName\n      });\n\n      M.toast({ html: `${firstName} ${lastName} is now a tech` });\n\n      // Clear fields\n      setFirstName(\"\");\n      setLastName(\"\");\n    }\n  };\n\n  return (\n    <div id=\"add-tech-modal\" className=\"modal\">\n      <div class=\"modal-content\">\n        <h4>New technician</h4>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <label htmlfor=\"firstName\" className=\"active\">\n              First Name\n            </label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"LastName\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <label htmlfor=\"lastName\" className=\"active\">\n              Last Name\n            </label>\n          </div>\n        </div>\n        <div className=\"modal-footer\">\n          <a\n            href=\"#!\"\n            onClick={onSubmit}\n            className=\"modal-close waves-effect blue waves-green btn\"\n          >\n            Enter\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired\n}\n\nexport default connect(null, {addTech})(AddTechModal);\n","import React from 'react'\nimport { connect } from \"react-redux\"\nimport PropTypes from 'prop-types'\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport {deleteTech} from \"../../actions/techActions\"\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\n  const onDelete = () => {\n    deleteTech(id)\n    M.toast({ html: \"Technician Deleted\" });\n  }\n    return (\n      <li className=\"collection-item\">\n        <div>\n          {firstName} {lastName}\n          <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\n            <i className=\"material-icons grey-text\">delete</i>\n          </a>\n        </div>\n      </li>\n    );\n}\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteTech})(TechItem)\n","import React, { useEffect } from \"react\";\nimport {connect} from \"react-redux\"\nimport PropTypes from 'prop-types'\nimport TechItem from \"./TechItem\";\n\nimport {getTechs} from \"../../actions/techActions\"\n\nconst TechListModal = ({getTechs, tech: {techs, loading}}) => {\n\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id=\"tech-list-modal\" className=\"modal\">\n      <div class=\"modal-content\">\n        <h4>Technician List</h4>\n        <ul class=\"collection\">\n          {!loading &&\n            techs !== null && techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = state => ({\n  tech: state.tech\n})\n\nexport default connect(mapStateToProps, {getTechs})(TechListModal);\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n  SEARCH_LOGS\n} from \"../actions/types\";\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n        loading: false,\n      };\n\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log.id !== action.payload),\n        loading: false,\n      };\n\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log.id === action.payload.id ? action.payload : log\n        ),\n    };    \n      \n      case SEARCH_LOGS:\n          return {\n              ...state,\n              logs: action.payload\n          }\n\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case LOGS_ERROR:\n      console.error(action.payload);\n      return {\n        ...state,\n        error: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  TECHS_ERROR,\n  SET_LOADING,\n} from \"../actions/types\";\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_TECHS:\n            return {\n                ...state,\n                techs: action.payload,\n                loading: false\n            }\n\n        case ADD_TECH:\n            return {\n                ...state,\n                techs: [...state.techs, action.payload],\n                loading: false\n            }\n        \n        case DELETE_TECH:\n            return {\n                ...state,\n                techs: state.techs.filter(tech => tech.id !== action.payload),\n                loading: false\n            }\n        \n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        \n        case TECHS_ERROR:\n            console.error(action.payload)\n            return {\n                ...state,\n                error: action.payload,\n                loading: false\n            }\n\n        default:\n            return state\n    }\n}\n","import { combineReducers } from \"redux\"\nimport logReducer from \"./logreducer\"\nimport techReducer from \"./techreducer\"\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer\n});","import { createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store\n","import React, { Fragment, useEffect } from \"react\";\nimport \"materialize-css/dist/css/materialize.min.css\";\nimport M from \"materialize-css/dist/js/materialize.min.js\";\n\nimport SearchBar from \"./components/layout/SearchBar\";\nimport AddBtn from \"./components/layout/AddBtn\";\nimport Logs from \"./components/logs/Logs\";\nimport AddLogModal from \"./components/logs/AddLogModal\";\nimport EditLogModal from \"./components/logs/EditLogModal\";\nimport AddTechModal from \"./components/techs/AddTechModal\";\nimport TechListModal from \"./components/techs/TechListModal\";\nimport { Provider } from \"react-redux\"\nimport store from \"./store\"\n\nimport \"./App.css\";\n\nconst App = () => {\n  useEffect(() => {\n    // To Initilaize Materialise in React\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <SearchBar />\n        <div class=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}